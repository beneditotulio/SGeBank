@using SGeBank.Models.BasicMgr.Bean
@model SGeBank.Models.ClientMgr.Bean.Client

@{
    ViewBag.Title = "Editar";
    List<GeneralClassifier> DocType = ViewData["DOCTYPE"] as List<GeneralClassifier>;
    List<GeneralClassifier> Gender = ViewData["GENDER"] as List<GeneralClassifier>;
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Client</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.cid)

    <div class="form-group">
        @Html.LabelFor(model => model.clientName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.clientName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.clientName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.clientSurname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.clientSurname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.clientSurname, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("TipoDoc", htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.DropDownListFor(m => m.cDoctype, new SelectList(DocType, "ID", "Description"), "Escolha o Tipo de Doc....",
                               new
                               {
                                   @class = "form-control",
                                   @id = "cDoctype",
                                   @name = "cDoctype",
                                   style = "font-size:12px;",
                                   @required = "required"
                               })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.cDocnum, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cDocnum, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cDocnum, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.cGender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cGender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cGender, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <div class="form-group">
        @Html.Label("Genero", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.cGender, new SelectList(Gender, "ID", "Description"), "Escolha o genero...",
                               new
                               {
                                   @class = "form-control",
                                   @id = "cGender",
                                   @name = "cGender",
                                   style = "font-size:12px;",
                                   @required = "required"
                               })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.cAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cAddress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.cPhone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cPhone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cPhone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.cPhone2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cPhone2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cPhone2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.cEmail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cEmail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cEmail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
