@using SGeBank.Models.BasicMgr.Bean
@model SGeBank.Models.WorkerMgr.Bean.Worker

@{
    ViewBag.Title = "Editar";
    List<GeneralClassifier> DocType = ViewData["DOCTYPE"] as List<GeneralClassifier>;
    List<GeneralClassifier> Gender = ViewData["GENDER"] as List<GeneralClassifier>;
    List<GeneralClassifier> WType = ViewData["WTYPE"] as List<GeneralClassifier>;
}

<h2>Editar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Funcionario</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.wid)

    <div class="form-group">
        @Html.LabelFor(model => model.workerName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.workerName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.workerName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.workerSurname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.workerSurname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.workerSurname, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.wDoctype, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.wDoctype, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.wDoctype, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.wType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.wType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.wType, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <div class="form-group">
        @Html.Label("Tipo de Funcionario", htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.DropDownListFor(m => m.wType, new SelectList(WType, "ID", "Description"), "Escolha o Tipo de Func....",
                               new
                               {
                                   @class = "form-control",
                                   @id = "wType",
                                   @name = "wType",
                                   style = "font-size:12px;",
                                   @required = "required"
                               })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("TipoDoc", htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.DropDownListFor(m => m.wDoctype, new SelectList(DocType, "ID", "Description"), "Escolha o Tipo de Doc....",
                               new
                               {
                                   @class = "form-control",
                                   @id = "wDoctype",
                                   @name = "wDoctype",
                                   //@onchange = "onCalculateTotalShipment('CORREIO AZUL')",
                                   style = "font-size:12px;",
                                   @required = "required"
                               })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.cDocnum, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cDocnum, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cDocnum, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.wGender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.wGender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.wGender, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <div class="form-group">
        @Html.Label("Genero", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.wGender, new SelectList(Gender, "ID", "Description"), "Escolha o genero...",
                               new
                               {
                                   @class = "form-control",
                                   @id = "wGender",
                                   @name = "wGender",
                                   style = "font-size:12px;",
                                   @required = "required"
                               })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.wAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.wAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.wAddress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.wPhone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.wPhone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.wPhone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.wPhone2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.wPhone2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.wPhone2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.wEmail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.wEmail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.wEmail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Gravar" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Voltar a lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
